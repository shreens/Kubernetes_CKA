ConfigMap - To change the image icon on web page/image url we use configMaps.
Secrets - To encode the sensitive data (such as username and passwords)

vi configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-config-map
data:
  # property-like keys; each key maps to a simple value
  image-full-url: "https://icon-library.com/images/icon-png-logos/icon-png-logos-7.jpg"
---
vi sampledeployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-app-deployment
  labels:
    deployment: subscription-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: subscription-app
  template:
    metadata:
      labels:
        app: subscription-app
    spec:
      containers:
      - name: subscription
        image: jitenreddy/subscription-app
        env:
        - name: IMAGEURL
          valueFrom:
            configMapKeyRef:
              name: simple-config-map
              key: image-full-url
        ports:
        - containerPort: 4000

vi svcconfig.yaml
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: streaming-svc
  name: stereaming-svc
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 4000
  selector:
    app: subscription-app
  type: NodePort
---
kubectl apply -f sampledeployment.yaml
kubectl apply -f svcconfig.yaml
kubectl apply -f configmap.yaml
kubectl get cm
kubectl describe cm simple-config-map
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subappdeployment
  labels:
    app: subapp
    tier: frontend
spec:
  # modify replicas according to your case
  replicas: 2
  selector:
    matchLabels:
      tier: subapp
  template:
    metadata:
      labels:
        tier: subapp
    spec:
      containers:
      - name: subapp
        image: jitenreddy/expmon
        env:
        - name: MONGO_USERNAME
          value: "adminuser"
        - name: MONGO_PASSWORD
          value: "password123"
        - name: MONGO_CLUSTER_URL
          value: "mongo-nodeport-svc"
        - name: MONGO_PORT
          valueFrom:
              configMapKeyRef:
                name: app-mongo-config-demo
                key: mongo_port
        - name: DB_NAME
          valueFrom:
              configMapKeyRef:
                name: app-mongo-config-demo
                key: mongo_db_name
        - name: COLLECTION_NAME
          valueFrom:
              configMapKeyRef:
                name: app-mongo-config-demo
                key: mongo_collection_name
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: new-sub-app-svc
  name: new-sub-app-svc
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 4000
  selector:
    tier: subapp
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-nodeport-svc
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 27017
    nodePort: 32000
  selector:
    app: mongo
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-mongo-config-demo
data:
  # property-like keys; each key maps to a simple value
  mongo_port: "27017"
  mongo_db_name: "Subscribers"
  mongo_collection_name: "subs"
---

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CHANGING IMAGE ICON USING ENV VARIABLE

vi dep.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-app-deployment
  labels:
    deployment: subscription-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: subscription-app
  template:
    metadata:
      labels:
        app: subscription-app
    spec:
      containers:
      - name: subscription
        image: jitenreddy/subscription-app
        env:
        - name: IMAGEURL
          value: "https://cdn-icons-png.flaticon.com/512/174/174855.png"   #=====> Changing the URL will change the image icon.
        ports:
        - containerPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: streaming-svc
  name: stereaming-svc
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 4000
  selector:
    app: subscription-app
  type: NodePort
---
kubectl apply -f dep.yaml
(browser:: VM ip:port no =======>for accessing application)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
