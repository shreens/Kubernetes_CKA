Headless Service ::: Creates a multiple DNS for different purpose (one pod mapped to one DNS for read purpose and other pod mapped to other DNS for write purpose)

vi mongo.yaml

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-headless-svc
spec:
  clusterIP: None
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
---
kubectl apply -f mongo.yaml
kubectl get svc
kubectl exec -ti busybox -- nslookup mongo-headless-svc

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Load Balancer Service ::: Its an external load balancer will decide and distruibute the traffic between worker nodes depending on request recieved.
             
             
External Load balancer IP will be automatically generated by cloud providers (EKS, Azure AKS).

vi mongo.yaml

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-demo-svc
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
  type: LoadBalancer

kubectl apply -f mongo.yaml
kubectl get svc

EKS in aws cloud
From local laptop install aws cli (google - awscli for windows download)
git bash /powershell - aws
aws configure
AWS Access Key ID [****************WUZZ]:                   ====================>create one in AWS IAM - Manage Acess key - Access Key - Create
AWS Secret Access Key [****************5a4q]:                ====================>create one in AWS IAM
Default region name [us-east-1]:
Default output format [json]:
aws eks update-kubeconfig --region us-east-1 --name EKSDemoCluster  =============) to connect to AWS EKS cluster from AWS cli in local

(browser ::: external load balancer ip of service:port no  =============>for accessing application)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ingress



             
     
